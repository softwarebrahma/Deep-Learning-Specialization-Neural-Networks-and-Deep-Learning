With everything you've learned, you're just about ready to tackle your first programming assignment. Before you do that, let me just give you a quick tour of ipython notebooks in Coursera. Here you see, Jupiter iphython notebooks that you can get to in Coursera. Let me just quickly show you a few features of this. The instructions are written into this notebook and there'll be a few code blocks right here that you can write code into. So occasionally, you see in functions blocks that looks like this. The instructions are right here in the text, in the ipython notebook. And these long, you know, like gray blocks are blocks of code. So occasionally, you see in these blocks sometimes they'll say this is their style code here and end code here. To do their primary exercise, please make sure to write your code between the start code here and end code here. So for example, print Hello World. Right. And, then to execute a code block, you can hit shift enter and then they execute this code block, which I guess we just wrote print Hello World. So that printed Hello World. To run a cell, you can also, to run one of these code blocks in cell, you can also click cell and then run cell. So to execute this is possible that on your computer the keyboard shortcut for cell runs cell might be different than shift enter but on both my Mac as well as on my PC, a shift enter so might be the same for you as well. Now, when you're reading the instructions if you know, accidentally double click on it, you might end up with this markdown language. If you end up with this funny looking text, to convert it back to the nice looking text just run the cell. So click on the cell runs cell or I'm going to hit shift enter and that basically executes the markdown and turns it back into this nice looking code. Just a couple of more tips, when you execute code like this, it actually runs on a kernel on a piece of code that runs on the server. If you're running an excessively large job or if you're, you leave a computer for a very long time or something goes wrong, your internet connection is off, there is a small chance of the kernel on the back end might die, which is just click kernel. And then restart kernel and hopefully that will reboot the kernel and make it work again. So that shouldn't happen if you're just running relatively small jobs and you're just starting up your ipad or notebook. But if you see an error message that the kernel has died or something, you can try kernel restart. Finally, and I apply to no politeness, there may be multiple blocks of code. So, even if an earlier block of code doesn't have any grading code, be sure to execute this block of code because in this example, it imposed numpy as np and so on. And said so some of the variables that you might need in order to execute the lowdown on blocks of code so be sure to execute the ones on top even if you aren't asked to write any code in them. And finally, when you're done implementing your solutions as this blue submit assignment button here on the right and we click that it will submit your solutions for grading. I found out the interactive command shell nature of ipython notebooks to be very useful for letting you quickly implement a few lines of code, see an outcome, learn it very quickly. And so I hope that the approach exercises and Coursera in Jupiter ipython notebooks will help you quickly learn and experiment and see how to implement these learning algorithms. There's one more video after this. This is an optional video that talks about the cost function for aggression. You can watch that or not, either way is perfectly fine. But either way, best of luck with the week two probing assignments. And I also look forward to seeing you at the start of the week. The materials.